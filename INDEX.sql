DROP TABLE members;
-- creating table members
CREATE TABLE members(
    member_id INT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR2(100) NOT NULL,
    last_name VARCHAR2(100) NOT NULL,
    gender CHAR(1) NOT NULL,
    dob DATE NOT NULL,
    email VARCHAR2(255) NOT NULL,
    PRIMARY KEY(member_id)
);

SELECT COUNT(member_id) FROM members;

-- this selects all the index names and their data from
-- members table
SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'MEMBERS';
    
SELECT * FROM members WHERE member_id=999;

-- this creates an index named i_members_lastname
-- on the column last_name from members table
CREATE INDEX i_members_lastname
ON members(last_name);

EXPLAIN PLAN FOR
SELECT * FROM members
WHERE last_name = 'Harse' AND first_name='Stinky';

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());

DROP INDEX i_members_lastname;

CREATE INDEX i_members_name
ON members(last_name,first_name);

-- it will only take unique values for email
CREATE UNIQUE INDEX i_members_email
ON members(email);


CREATE TABLE t1 (
    pk1 INT PRIMARY KEY,
    c1 INT
);

SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'T1';
    
CREATE TABLE t2 (
    pk2 INT PRIMARY KEY 
        USING INDEX (
            CREATE INDEX t1_pk1_i ON t2 (pk2)
    ),
    c2 INT
);

SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'T2';

SELECT * FROM members
WHERE UPPER(last_name) = 'SANS';

-- a simple function based index
CREATE INDEX i_members_uppercase_lastname
ON members(UPPER(last_name));

-- bitmap index
SELECT gender, COUNT(*) FROM members GROUP BY gender;

CREATE BITMAP INDEX i_members_gender
ON members(gender);

EXPLAIN PLAN FOR 
SELECT 
    *
FROM
    members
WHERE
    gender = 'M';

    
SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());      


commit;
