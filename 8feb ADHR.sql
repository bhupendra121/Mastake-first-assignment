DROP TABLE members;
CREATE TABLE members(
    member_id INT GENERATED BY DEFAULT AS IDENTITY,
    first_name VARCHAR2(100) NOT NULL,
    last_name VARCHAR2(100) NOT NULL,
    gender CHAR(1) NOT NULL,
    dob DATE NOT NULL,
    email VARCHAR2(255) NOT NULL,
    PRIMARY KEY(member_id)
);

SELECT COUNT(member_id) FROM members;

SELECT 
    index_name, 
    index_type, 
    visibility, 
    status 
FROM 
    all_indexes
WHERE 
    table_name = 'MEMBERS';
    
SELECT * FROM members WHERE member_id=999;

CREATE INDEX i_members_lastname
ON members(last_name);

EXPLAIN PLAN FOR
SELECT * FROM members
WHERE last_name = 'Harse';

SELECT 
    PLAN_TABLE_OUTPUT 
FROM 
    TABLE(DBMS_XPLAN.DISPLAY());

--###########################################################################
-- coalesce(,,,)
--###########################################################################

SELECT 
    empno,ename,sal,comm,COALESCE(comm,0),NVL(comm,0)
FROM
    emp;
--###########################################################################    
-- SAL  |COMM  |COALESCE(SAL,COMM,100)
-- 500  | NULL |500
-- 600  | 500  |600
-- NULL | 500  |500
-- NULL | NULL |100
--###########################################################################

INSERT INTO emp VALUES(8888,'DUMMY','CLERK',7839,TO_DATE('10-10-2010','DD-MM-YYYY'),NULL,NULL,10);
SELECT 
    empno,ename,sal,comm,COALESCE(sal,comm,1000)
FROM
    emp
WHERE deptno=10
ORDER BY sal,comm;
--###########################################################################
--Section 7. Set Operators
--###########################################################################
SELECT
    ename,deptno,'DEPT10' 
FROM 
    emp 
WHERE 
    deptno=10
UNION
SELECT 
    ename,deptno,'DEPT30'
FROM 
    emp 
WHERE 
    deptno=30;

-- union all
SELECT 
    ename,deptno 
FROM 
    emp 
WHERE 
    deptno=10
UNION ALL
SELECT 
    ename,deptno 
FROM 
    emp 
WHERE 
    deptno=30;

--###########################################################################
--Query the two ENAME in EMP with the shortest and longest EMP names,
--as well as their respective lengths (i.e.: number of characters in the name). 
--If there is more than one smallest or largest ENAME, choose the one that comes 
--first when ordered alphabetically.
--  a.  ename shortest
--  b.  ename largest
--  ENAME       LENGTH(ENAME) 
--  FORD	    4           -> WHO WILL GET SHORTEST EMP NAME ORDER ASC ENAME WITH LENGTH
--JOHN_SMITH	10          -> WHO WILL GET LARGEST EMP NAME ORDER ASC ENAME WITH LENGTH

--###########################################################################
SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME);
SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME),ENAME;

--  a. city name which shortest => ename shortest
SELECT * 
    FROM 
        (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME),ENAME)
    WHERE rownum=1;
--  b. city name which longest  =. ename largest    
SELECT * 
    FROM 
        (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME) desc,ENAME)
    WHERE rownum=1;


SELECT *  FROM (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME),ENAME) WHERE rownum=1
UNION
SELECT * FROM (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME) desc,ENAME) WHERE rownum=1;

SELECT *  FROM (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME),ENAME) WHERE rownum<=2
UNION ALL
SELECT * FROM (SELECT ENAME,LENGTH(ENAME) FROM EMP ORDER BY LENGTH(ENAME) desc,ENAME) WHERE rownum<=2;

SELECT * FROM emp WHERE deptno=10;
SELECT * FROM(SELECT * FROM (SELECT ename,deptno,sal FROM emp WHERE deptno=10 ORDER BY sal DESC,ename) WHERE ROWNUM<=2
UNION
SELECT * FROM (SELECT ename,deptno,sal FROM emp WHERE deptno=20 ORDER BY sal DESC,ename) WHERE ROWNUM<=2
UNION
SELECT * FROM (SELECT ename,deptno,sal FROM emp WHERE deptno=30 ORDER BY sal DESC,ename) WHERE ROWNUM<=2)
FETCH FIRST 5 ROWS ONLY;
